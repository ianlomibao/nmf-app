// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InfoModalScreen renders correctly 1`] = `
<RCTScrollView
  style={
    Object {
      "backgroundColor": "#FFFFFF",
      "flex": 1,
      "paddingHorizontal": 16,
    }
  }
>
  <View>
    <View
      style={
        Object {
          "marginVertical": 5,
        }
      }
    >
      <Text.H3>
        How often this emission happens?
      </Text.H3>
      <View
        style={
          Object {
            "flexDirection": "row",
            "flexWrap": "wrap",
            "marginVertical": 5,
          }
        }
      >
        <RNGestureHandlerButton
          collapsable={false}
          exclusive={true}
          handlerTag={1}
          handlerType="NativeViewGestureHandler"
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
          touchSoundDisabled={false}
        >
          <View
            accessible={true}
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "borderRadius": 5,
                    "borderWidth": 2,
                    "margin": 10,
                    "padding": 10,
                  },
                  Object {
                    "backgroundColor": "#DCF0E5",
                    "borderColor": "#4BB377",
                  },
                ]
              }
            >
              <Text.Primary
                style={
                  Array [
                    Object {
                      "fontSize": 16,
                      "fontWeight": "bold",
                      "textAlign": "center",
                    },
                    Object {
                      "color": "#4BB377",
                    },
                  ]
                }
              >
                Monthly
              </Text.Primary>
            </View>
          </View>
        </RNGestureHandlerButton>
        <RNGestureHandlerButton
          collapsable={false}
          exclusive={true}
          handlerTag={2}
          handlerType="NativeViewGestureHandler"
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
          touchSoundDisabled={false}
        >
          <View
            accessible={true}
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "borderRadius": 5,
                    "borderWidth": 2,
                    "margin": 10,
                    "padding": 10,
                  },
                  Object {
                    "backgroundColor": "#F0F0F0",
                    "borderColor": "#F0F0F0",
                  },
                ]
              }
            >
              <Text.Primary
                style={
                  Array [
                    Object {
                      "fontSize": 16,
                      "fontWeight": "bold",
                      "textAlign": "center",
                    },
                    Object {
                      "color": "#595D58",
                    },
                  ]
                }
              >
                Weekly
              </Text.Primary>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
    <View
      style={
        Object {
          "marginVertical": 5,
        }
      }
    >
      <Text.H3>
        Occurences?
      </Text.H3>
      <View
        style={
          Object {
            "flexDirection": "row",
            "flexWrap": "wrap",
            "marginVertical": 5,
          }
        }
      >
        <RNGestureHandlerButton
          collapsable={false}
          exclusive={true}
          handlerTag={3}
          handlerType="NativeViewGestureHandler"
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
          touchSoundDisabled={false}
        >
          <View
            accessible={true}
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "borderRadius": 5,
                    "borderWidth": 2,
                    "margin": 10,
                    "padding": 10,
                  },
                  Object {
                    "backgroundColor": "#F0F0F0",
                    "borderColor": "#F0F0F0",
                  },
                ]
              }
            >
              <Text.Primary
                style={
                  Array [
                    Object {
                      "fontSize": 16,
                      "fontWeight": "bold",
                      "textAlign": "center",
                    },
                    Object {
                      "color": "#595D58",
                    },
                  ]
                }
              >
                1 time
              </Text.Primary>
            </View>
          </View>
        </RNGestureHandlerButton>
        <RNGestureHandlerButton
          collapsable={false}
          exclusive={true}
          handlerTag={4}
          handlerType="NativeViewGestureHandler"
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
          touchSoundDisabled={false}
        >
          <View
            accessible={true}
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "borderRadius": 5,
                    "borderWidth": 2,
                    "margin": 10,
                    "padding": 10,
                  },
                  Object {
                    "backgroundColor": "#F0F0F0",
                    "borderColor": "#F0F0F0",
                  },
                ]
              }
            >
              <Text.Primary
                style={
                  Array [
                    Object {
                      "fontSize": 16,
                      "fontWeight": "bold",
                      "textAlign": "center",
                    },
                    Object {
                      "color": "#595D58",
                    },
                  ]
                }
              >
                2 times
              </Text.Primary>
            </View>
          </View>
        </RNGestureHandlerButton>
        <RNGestureHandlerButton
          collapsable={false}
          exclusive={true}
          handlerTag={5}
          handlerType="NativeViewGestureHandler"
          onGestureEvent={[Function]}
          onGestureHandlerEvent={[Function]}
          onGestureHandlerStateChange={[Function]}
          onHandlerStateChange={[Function]}
          rippleColor={0}
          touchSoundDisabled={false}
        >
          <View
            accessible={true}
            collapsable={false}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "borderRadius": 5,
                    "borderWidth": 2,
                    "margin": 10,
                    "padding": 10,
                  },
                  Object {
                    "backgroundColor": "#F0F0F0",
                    "borderColor": "#F0F0F0",
                  },
                ]
              }
            >
              <Text.Primary
                style={
                  Array [
                    Object {
                      "fontSize": 16,
                      "fontWeight": "bold",
                      "textAlign": "center",
                    },
                    Object {
                      "color": "#595D58",
                    },
                  ]
                }
              >
                3 times
              </Text.Primary>
            </View>
          </View>
        </RNGestureHandlerButton>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
